// All activities in all of the endpoints will get logged in the database.

// Products Endpoints...

1. method: POST, endpoint: /products, headers: {
    Authorisation: `Bearer Token`
}, body: {
    name,
    price
}

(Creates a new product in the database, User's role has to be admin to be able to create a new product).

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

2. method: GET, endpoint: /products
(Fetches all products in the database).

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

3. method: GET, endpoint: /products/:id
(Fetches the product with the given id).

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

4. method: PATCH, endpoint: /products/:id, headers: {
    Authorisation: `Bearer Token`
}
(Updates the product with the given id, User's role has to be admin to be able to update the product).

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

5. method: DELETE, endpoint: /products/:id, headers: {
    Authorisation: `Bearer Token`
}
(Deletes the product with the given id, User's role has to be admin to be able to delete the product).

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// Users Endpoints...
1. method: POST, endpoint: /users, body: {
    username,
    password,
    role
}

(Creates the user in the database).

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

2. method: POST, endpoint: /users/login, body: {
    username,
    password
}

(Logs in the user. Returns the user data and jwt token to the client).

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// Logs endpoints:

1. method: POST, endpoint: /logs/create
(Creates a log for the activity).